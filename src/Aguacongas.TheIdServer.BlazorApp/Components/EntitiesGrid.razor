@typeparam TItem

<table class="@TableClass">
    @if (TableHeader != null)
    {
        <thead class="select">
            <tr class="@HeaderRowClass">@TableHeader</tr>
        </thead>
    }
    @if (Items != null && RowTemplate != null)
    {
        <tbody>
        @if(Items.Any())
        {
            @foreach (var item in Items)
            {
                <tr class="@RowClass" @onclick="() => RowClicked.InvokeAsync(item)">@RowTemplate(item)</tr>
            }
        }
        else 
        { 
            <tr>Nothing here.</tr>
        }
        </tbody>
    }
    @if (TableFooter != null)
    {
        <tfoot>
            <tr>@TableFooter</tr>
        </tfoot>
    }
</table>

@code {
    [Parameter]
    public string TableClass { get; set; } = "table";

    [Parameter]
    public string HeaderRowClass { get; set; } = "select";

    [Parameter]
    public string RowClass { get; set; } = "select";

    [Parameter]
    public string FooterClass { get; set; }

    [Parameter]
    public RenderFragment TableHeader { get; set; }

    [Parameter]
    public RenderFragment<TItem> RowTemplate { get; set; }

    [Parameter]
    public RenderFragment TableFooter { get; set; }

    [Parameter]
    public IEnumerable<TItem> Items { get; set; }

    [Parameter]
    public GridState GridState { get; set; } = new GridState();

    [Parameter]
    public EventCallback<TItem> RowClicked { get; set; }
}
