@if (Claim.Id == null)
{
    <div class="input-group input-group-sm mb-3">
        <input type="text" class="form-control new-claim" placeholder="claim type" value="@Claim.Type"
               @onchange="OnInputChanged" />
        <div class="input-group-append">
            <span class="input-group-text oi oi-plus" />
        </div>
    </div>
}
else
{
    <div class="input-group input-group-sm mb-3">
        <div class="form-control" disabled>@Claim.Type</div>        
        <div class="input-group-append select" @onclick="() => DeleteClicked.InvokeAsync(null)">
            <span class="input-group-text oi oi-trash" />
        </div>
    </div>
}

@code {
    [Parameter]
    public Entity.IClaimType Claim { get; set; }

    [Parameter]
    public EventCallback DeleteClicked { get; set; }

    [Parameter]
    public EventCallback<Entity.IClaimType> ValueChanged { get; set; }

    private Task OnInputChanged(ChangeEventArgs e)
    {
        Claim.Type = e.Value as string;
        Claim.Id = Guid.NewGuid().ToString();
        return ValueChanged.InvokeAsync(Claim);
    }
}
