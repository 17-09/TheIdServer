<EntitiesGrid Items="@Model.Properties" TableClass="table table-hover" Context="property">
    <TableHeader>
        <th scope="col">
            <SortableHeader Property="Key"
                            Text="key"
                            GridState="GridState" />
        </th>
        <th scope="col">
            <SortableHeader Property="Value"
                            Text="value"
                            GridState="GridState" />
        </th>
        <th></th>
    </TableHeader>
    <RowTemplate>
        @if (property.Id != null)
        {
            <td>
                @property.Key
            </td>
        }
        else
        {
            <td>
                <AuthorizeText Name="key" @bind-Value="@property.Key" />
            </td>
        }
        <td>
            <AuthorizeText Name="value" @bind-Value="@property.Value" />
        </td>
        <td>
            <AuthorizeButton CssSubClass="btn-primary" Clicked="() => OnDeleteEntityClicked(property)">
                <span class="oi oi-trash"></span>
            </AuthorizeButton>
        </td>
    </RowTemplate>
</EntitiesGrid>
@code {
    protected GridState GridState { get; } = new GridState();

    [Parameter]
    public Entity.IdentityResource Model { get; set; }

    [Parameter]
    public EventCallback<Entity.IdentityProperty> DeleteEntityClicked { get; set; }

    protected void OnDeleteEntityClicked(Entity.IdentityProperty entity)
    {
        DeleteEntityClicked.InvokeAsync(entity);
    }
}